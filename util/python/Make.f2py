
F90_PREFIX := F90PP-
include $(FEXE_sources:%.F=$(depEXETempDir)/%.d)
F90EXE_sources += AMReX_error_mod.F90 AMReX_ParallelDescriptor_F.F90

# to make python libraries, we need to do -fPIC (in gfortran)
F90FLAGS += -fPIC
FFLAGS += -fPIC
CFLAGS += -fPIC
CXXFLAGS += -fPIC

UNAME = $(shell uname)

ifeq (${UNAME}, Darwin)
	LIBTOOL = libtool -static -o
else
 	LIBTOOL = ar src
endif

WRAP_DIR := $(TmpBuildDir)/py
# where do we want to put the f90wrap files?
KIND_MAP := $(MICROPHYSICS_HOME)/util/python/kind_map
# where is the kind map file?
F90_FILE_PREFIX := ../../$(f77EXETempDir)/$(F90_PREFIX)
# where are the f90 files we want to wrap?

eos: libsrc.a $(objEXETempDir)/eos.o $(objEXETempDir)/eos_type.o $(objEXETempDir)/network.o
	cp $(MICROPHYSICS_HOME)/util/python/AMReX_* .
	mkdir -p $(WRAP_DIR)
	cd $(WRAP_DIR); f90wrap -c -m eos $(F90_FILE_PREFIX)eos.F90  $(F90_FILE_PREFIX)eos_type.F90  $(F90_FILE_PREFIX)network.F90 -k $(KIND_MAP) -P
	f2py-f90wrap -I$(objEXETempDir)/ -c -m _eos -lsrc $(WRAP_DIR)/f90wrap_*.f90 -L. $(objEXETempDir)/*.o
	mkdir -p eos
	mv $(WRAP_DIR)/eos/* eos
	echo "eos.eos_module.eos_init()" >> eos/__init__.py
	echo "eos.network.network_init()" >> eos/__init__.py
	rmdir $(WRAP_DIR)/eos
	rm AMReX_*

libsrc.a: $(objEXETempDir)/eos.o $(objEXETempDir)/eos_type.o $(objEXETempDir)/network.o $(objEXETempDir)/AMReX_error_mod.o
	${LIBTOOL} $@ $?

clean::
	rm -rf $(objEXETempDir)/*.mod $(objEXETempDir)/*.o
	rm -rf $(WRAP_DIR)/*
	rm -rf eos
	rm -f f90wrap_*
	rm -f _eos*.so
	rm -f .f2py_*
